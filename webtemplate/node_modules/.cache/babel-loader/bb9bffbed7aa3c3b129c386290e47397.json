{"ast":null,"code":"var _jsxFileName = \"/home/tardis1/React/reactwebtemplate/webtemplate/src/index.jsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router } from 'react-router';\nimport { Route, BrowserRouter, Switch } from 'react-router-dom';\nimport { createBrowserHistory } from 'history'; //All the above are needed to make the routes below work to display new pages\n\nimport './css/index.css';\nimport App from './App';\nimport { home } from './containers/home'; //This is the main page of the app\n\nimport { Page } from './components/Page'; //This is the basic page component to render each page\n\nimport pageData from './shared/pageData'; //This imports our web site data JSON\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const browserHistory = createBrowserHistory(); //needed for routes to get back home, I think\n//This creates a list of Routes based on page ids in the JSON\n//The for...in works, array.map() does not.  Still don't know why\n//Route needs a key to cut down on Chrome errors\n//our cheat is using the current array length to set an index for the key\n\nvar routelist = [];\n\nfor (const prop in pageData) {\n  routelist.push( /*#__PURE__*/_jsxDEV(Route, {\n    path: pageData[prop].linkto,\n    render: () => /*#__PURE__*/_jsxDEV(Page, {\n      pageinfo: pageData[prop].pagename\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 96\n    }, this)\n  }, routelist.length - 1, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 19\n  }, this));\n} //This is boiler plate on using Reactjs Router\n//The array of routes is inserted after the two fixed Routes\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(BrowserRouter, {\n  children: /*#__PURE__*/_jsxDEV(Switch, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      history: browserHistory,\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        component: App\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home\",\n        component: home\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), routelist]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 28,\n  columnNumber: 3\n}, this), document.getElementById('app'));","map":{"version":3,"sources":["/home/tardis1/React/reactwebtemplate/webtemplate/src/index.jsx"],"names":["React","ReactDOM","Router","Route","BrowserRouter","Switch","createBrowserHistory","App","home","Page","pageData","browserHistory","routelist","prop","push","linkto","pagename","length","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,KAAT,EAAgBC,aAAhB,EAA+BC,MAA/B,QAA6C,kBAA7C;AACA,SAASC,oBAAT,QAAqC,SAArC,C,CACA;;AAEA,OAAO,iBAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,IAAT,QAAqB,mBAArB,C,CAA4C;;AAC5C,SAASC,IAAT,QAAqB,mBAArB,C,CAA4C;;AAC5C,OAAOC,QAAP,MAAqB,mBAArB,C,CAA4C;;;AAE5C,OAAO,MAAMC,cAAc,GAAGL,oBAAoB,EAA3C,C,CAA+C;AAEtD;AACA;AACA;AACA;;AACA,IAAIM,SAAS,GAAG,EAAhB;;AACA,KAAK,MAAMC,IAAX,IAAmBH,QAAnB,EAA4B;AACzBE,EAAAA,SAAS,CAACE,IAAV,eAAe,QAAC,KAAD;AAAkC,IAAA,IAAI,EAAEJ,QAAQ,CAACG,IAAD,CAAR,CAAeE,MAAvD;AAA+D,IAAA,MAAM,EAAE,mBAAM,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEL,QAAQ,CAACG,IAAD,CAAR,CAAeG;AAA/B;AAAA;AAAA;AAAA;AAAA;AAA7E,KAAYJ,SAAS,CAACK,MAAV,GAAmB,CAA/B;AAAA;AAAA;AAAA;AAAA,UAAf;AACF,C,CAED;AACA;;;AACAhB,QAAQ,CAACiB,MAAT,eACE,QAAC,aAAD;AAAA,yBACE,QAAC,MAAD;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEP,cAAjB;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,SAAS,EAAEJ;AAAjC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,SAAS,EAAEC;AAA/B;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGI,SAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAUGO,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAVH","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router } from 'react-router';\nimport { Route, BrowserRouter, Switch } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\n//All the above are needed to make the routes below work to display new pages\n\nimport './css/index.css';\nimport App from './App';\nimport { home } from './containers/home';   //This is the main page of the app\nimport { Page } from './components/Page';   //This is the basic page component to render each page\nimport pageData from './shared/pageData';   //This imports our web site data JSON\n\nexport const browserHistory = createBrowserHistory(); //needed for routes to get back home, I think\n\n//This creates a list of Routes based on page ids in the JSON\n//The for...in works, array.map() does not.  Still don't know why\n//Route needs a key to cut down on Chrome errors\n//our cheat is using the current array length to set an index for the key\nvar routelist = [];\nfor( const prop in pageData){\n   routelist.push(<Route key={routelist.length - 1} path={pageData[prop].linkto} render={() => <Page pageinfo={pageData[prop].pagename} />} />)\n}\n\n//This is boiler plate on using Reactjs Router\n//The array of routes is inserted after the two fixed Routes\nReactDOM.render((\n  <BrowserRouter>\n    <Switch>\n      <Router history={browserHistory}>\n        <Route exact path=\"/\" component={App} />\n        <Route path=\"/home\" component={home} />\n        {routelist}\n      </Router>\n    </Switch>\n  </BrowserRouter>\n), document.getElementById('app'))"]},"metadata":{},"sourceType":"module"}